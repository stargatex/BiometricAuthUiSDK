name: Publish Release

on:
  workflow_call:
    secrets:
      MAVEN_CENTRAL_USERNAME:
        required: true
      MAVEN_CENTRAL_PASSWORD:
        required: true
      GPG_KEY_SECRET:
        required: true
      GPG_KEY_PASSWORD:
        required: true
      GITHUB_TOKEN:
        required: true

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.jvmargs="-Xmx3g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"

jobs:
  publish:
    name: Publish Release to SonarType Central
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create local.properties
        run: |
          echo "mavenCentralUsername=${{ secrets.MAVEN_CENTRAL_USERNAME }}" >> local.properties
          echo "mavenCentralPassword=${{ secrets.MAVEN_CENTRAL_PASSWORD }}" >> local.properties
          echo "gpgKeySecret=${{ secrets.GPG_KEY_SECRET }}" >> local.properties
          echo "gpgKeyPassword=${{ secrets.GPG_KEY_PASSWORD }}" >> local.properties

      - name: Set release version
        run: |
          echo "releaseVersion=${{ steps.get_version.outputs.VERSION }}" >> gradle.properties

      - name: Prepare release
        run: ./gradlew prepareRelease --no-daemon --stacktrace

      - name: Publish release to SonarType Central
        run: ./gradlew publishAllLibraries --no-daemon --stacktrace

      - name: Generate changelog
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            echo "CHANGELOG_CONTENT<<EOF" >> $GITHUB_OUTPUT
            awk '/## \[${{ steps.get_version.outputs.VERSION }}\]/{flag=1; next} /## \[/{flag=0} flag' CHANGELOG.md >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG_CONTENT=Release ${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.changelog.outputs.CHANGELOG_CONTENT }}
          draft: false
          prerelease: false

      - name: Clean up
        if: always()
        run: rm -f local.properties

      - name: Notify on success
        if: success()
        run: |
          echo "Release ${{ steps.get_version.outputs.VERSION }} published successfully!"
          echo "SonarType Central: Published"
          echo "GitHub Release: Created"

      - name: Notify on failure
        if: failure()
        run: |
          echo "Release publication failed"
          echo "Version: ${{ steps.get_version.outputs.VERSION }}"
          echo "Please check the logs above for details"