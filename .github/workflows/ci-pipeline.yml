name: CI Pipeline

on:
  workflow_call:
    inputs:
      cache-read-only:
        description: 'Use read-only cache?'
        type: boolean
        default: false

concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.jvmargs=-Xmx8192M -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -Dkotlin.daemon.jvm.options=-Xmx8192M

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-cache-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-cache-${{ runner.os }}-

      - name: Restore Kotlin/Native cache
        uses: actions/cache@v3
        with:
          path: ~/.konan/cache
          key: kotlin-native-cache-${{ runner.os }}-${{ hashFiles('**/*.kt', '**/*.kts', '**/*.def') }}
          restore-keys: kotlin-native-cache-${{ runner.os }}-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2
#        with:
#          cache-read-only: ${{ inputs.cache-read-only || github.ref != 'refs/heads/main' }}

      - name: Run all SDK tests
        run: ./gradlew testAllLibraries --no-daemon --stacktrace

      - name: Save Kotlin/Native cache
        if: ${{ always() }}
        uses: actions/cache@v3
        with:
          path: ~/.konan/cache
          key: kotlin-native-cache-${{ runner.os }}-${{ hashFiles('**/*.kt', '**/*.kts', '**/*.def') }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.os }}
          path: |
            **/build/test-results/*/
            **/build/reports/tests/*/
          retention-days: 30

  build:
    name: Build All Targets
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-cache-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-cache-${{ runner.os }}-

      - name: Restore Kotlin/Native cache
        uses: actions/cache@v3
        with:
          path: ~/.konan/cache
          key: kotlin-native-cache-${{ runner.os }}-${{ hashFiles('**/*.kt', '**/*.kts', '**/*.def') }}
          restore-keys: kotlin-native-cache-${{ runner.os }}-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2
#        with:
#          cache-read-only: ${{ inputs.cache-read-only || github.ref != 'refs/heads/main' }}

      - name: Build SDK libraries
        run: ./gradlew assembleAllLibraries --no-daemon --stacktrace

      - name: Check API compatibility
        run: ./gradlew apiCheckAllLibraries --no-daemon --stacktrace

#      - name: Build sample app
#        run: ./gradlew :sample:composeApp:assembleDebug --no-daemon --stacktrace

      - name: Save Kotlin/Native cache
        if: ${{ always() }}
        uses: actions/cache@v3
        with:
          path: ~/.konan/cache
          key: kotlin-native-cache-${{ runner.os }}-${{ hashFiles('**/*.kt', '**/*.kts', '**/*.def') }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            biometricLockSdk/build/libs/
            pinLockUISdk/build/libs/
            biometricLockSdk/build/outputs/
            pinLockUISdk/build/outputs/
          retention-days: 7

  quality-check:
    name: Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore Gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-cache-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-cache-${{ runner.os }}-

      - name: Restore Kotlin/Native cache
        uses: actions/cache@v3
        with:
          path: ~/.konan/cache
          key: kotlin-native-cache-${{ runner.os }}-${{ hashFiles('**/*.kt', '**/*.kts', '**/*.def') }}
          restore-keys: kotlin-native-cache-${{ runner.os }}-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2
#        with:
#          cache-read-only: ${{ inputs.cache-read-only || github.ref != 'refs/heads/main' }}

      - name: Run CI checks
        run: ./gradlew ciCheck --no-daemon --stacktrace

      - name: Save Kotlin/Native cache
        if: ${{ always() }}
        uses: actions/cache@v3
        with:
          path: ~/.konan/cache
          key: kotlin-native-cache-${{ runner.os }}-${{ hashFiles('**/*.kt', '**/*.kts', '**/*.def') }}


      - name: Upload quality reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: quality-reports
          path: |
            **/build/reports/lint/
            **/build/reports/detekt/
          retention-days: 30